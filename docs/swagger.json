{
    "swagger": "2.0",
    "info": {
        "description": "This is a server for cryptocurrency with login and registration",
        "title": "Crypto-Project API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/convert": {
            "post": {
                "description": "verify token and convert amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "convert page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "amount, from, to",
                        "name": "conversion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Conversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "convert is successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Authorization token not provided or Invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Token has expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/get": {
            "get": {
                "description": "verify token and get currencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "get page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get currencies is successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Authorization token not provided or Invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Token has expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/history": {
            "get": {
                "description": "verify token and get history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "history page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get history is successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Authorization token not provided or Invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Token has expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/home": {
            "get": {
                "description": "home page",
                "summary": "Home page",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "description": "information about register and login",
                "summary": "Info page",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login by json user with login, password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "login page",
                "parameters": [
                    {
                        "description": "Login and password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "login is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "login error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "register by json user with login, password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "registration page",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Credentials"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "registration successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "registration is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "registration error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Conversion": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "from": {
                    "type": "string",
                    "example": "usd"
                },
                "to": {
                    "type": "string",
                    "example": "bitcoin"
                }
            }
        },
        "entity.Credentials": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "user"
                },
                "password": {
                    "type": "string",
                    "example": "pass"
                }
            }
        }
    }
}